@use "@/styles/colors";
@use "@/styles/variables";


%_padding {
    padding: 0.5rem max(0.5rem, 12vw - 3rem);
}

.toggleContainer {
    @extend %_padding;

    display: none;
}

.collapsible {
    border-bottom: 0.05rem solid colors.$headerLine;
}

.content {
    @extend %_padding;

    display: flex;
    align-items: center;
    gap: 0.5rem;
}

%_separator {
    margin-left: auto;
}

@media screen and (max-width: 20rem * variables.$remFactor) {
    .header {
        position: relative;
    }

    .toggleContainer {
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }

    .collapsible {
        display: grid;
        grid-template-rows: 1fr;

        position: absolute;
        z-index: 1;

        width: 100%;

        background-color: colors.$background;

        transition: grid-template-rows 250ms;
    }

    .collapsed {
        grid-template-rows: 0fr;
    }

    .collapsibleInner {
        overflow-y: hidden;
    }

    .content {
        flex-direction: column;

        @each $direction in left, right, top {
            padding-#{$direction}: 0;
        }
    }

    %_separator {
        margin-left: 0;
    }
}


.link {
    text-decoration: none;
    color: colors.$secondary;

    transition: color 200ms, text-shadow 150ms;

    &:hover {
        color: colors.$primary;
    }

    &:active {
        text-shadow: 0 0 0.1rem colors.$shadow;
    }
}

.resetZoomButton {
    @extend %_separator;

    composes: square from "@/styles/button.module.scss";

    flex-shrink: 0;
}

.resetZoomImage {
    composes: image from "@/styles/button.module.scss";

    stroke: colors.$primary;
}

.themingPanel {
    display: flex;
    gap: 0.4rem;

    padding: 0.2rem;

    border: 0.05rem solid colors.$border;
    border-radius: 1rem;
}

.themingButton {
    composes: square from "@/styles/button.module.scss";

    @at-root button#{&} {
        --buttonSize: 1.2rem;

        padding: 0.25rem;

        border-radius: 50%;

        background-color: transparent;

        &:not(.selected) {
            border-color: transparent;
        }

        &.selected {
            cursor: inherit;

            background-color: colors.$activeButton;
        }
    }
}

.lightThemeImage, .darkThemeImage, .systemThemeImage {
    composes: image from "@/styles/button.module.scss";

    fill: colors.$primary;
}
